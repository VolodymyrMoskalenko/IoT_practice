int trigPin = 12;
int echoPin = 13;
int speakerPin = 2;
// співставлення найменування нот і їх частон
#define NOTE_AS3 233
#define NOTE_C4 262
#define NOTE_D4 294
#define NOTE_DS4 311
#define NOTE_E4 330
#define NOTE_F4 349
#define NOTE_G4 392
// швидкість відтворення мелодії
int tempo = 85;

// МЕЛОДІЯ - масив нот і масив тривалостей в одному масиві
int melody[] = {
    NOTE_G4, 8, NOTE_C4, 8, NOTE_DS4, 16, NOTE_F4, 16, NOTE_G4, 8, NOTE_C4, 8, NOTE_DS4, 16, NOTE_F4, 16,
    NOTE_G4, 8, NOTE_C4, 8, NOTE_DS4, 16, NOTE_F4, 16, NOTE_G4, 8, NOTE_C4, 8, NOTE_DS4, 16, NOTE_F4, 16,
    NOTE_G4, 8, NOTE_C4, 8, NOTE_E4, 16, NOTE_F4, 16, NOTE_G4, 8, NOTE_C4, 8, NOTE_E4, 16, NOTE_F4, 16,
    NOTE_G4, 8, NOTE_C4, 8, NOTE_E4, 16, NOTE_F4, 16, NOTE_G4, 8, NOTE_C4, 8, NOTE_E4, 16, NOTE_F4, 16,
    NOTE_G4, -4, NOTE_C4, -4, NOTE_DS4, 16, NOTE_F4, 16, NOTE_G4, 4, NOTE_C4, 4, NOTE_DS4, 16, NOTE_F4, 16,
    NOTE_D4, -1, NOTE_F4, -4, NOTE_AS3, -4, NOTE_DS4, 16, NOTE_D4, 16, NOTE_F4, 4, NOTE_AS3, -4,
    NOTE_DS4, 16, NOTE_D4, 16, NOTE_C4, -1};

// sizeof дає кількість байтів, кожне int кожне інт значенн складається з 2 байтів
// є два значення для кожної note, тому це займає 2*2 = 4 байти
int notes = sizeof(melody) / sizeof(melody[0]) / 2;
// калькуляція note в мс
int wholenote = (60000 * 4) / tempo;
int divider = 0, noteDuration = 0;

void setup() {
  Serial.begin (9600);
  pinMode (trigPin, OUTPUT);
  pinMode (echoPin, INPUT);
}

void loop() {
  int duration, distance;
  // для більшої точності встановимо значення LOW на піне Trig
  digitalWrite (trigPin, LOW);
  delayMicroseconds (2);
  // Тепер встановимо високий рівень на піне Trig
  digitalWrite (trigPin, HIGH);
  // Почекаємо 10 μs
  delayMicroseconds (10);
  digitalWrite (trigPin, LOW);
  // Дізнаємося тривалість високого сигналу на піне Echo
  duration = pulseIn (echoPin, HIGH);
  // Розрахуємо відстань
  distance = duration / 58;
  // Виведемо значення в Serial Monitor
  Serial.print (distance);
  Serial.println ( "cm");
    if (distance <125 && distance> 25) {
        // проходимо скрізь ноти мелодії
      for (int thisNote = 0; thisNote < notes * 2; thisNote = thisNote + 2)
      {
        digitalWrite (trigPin, LOW);
        delayMicroseconds (2);
        // Тепер встановимо високий рівень на піне Trig
        digitalWrite (trigPin, HIGH);
        // Почекаємо 10 μs
        delayMicroseconds (10);
        digitalWrite (trigPin, LOW);
        // Дізнаємося тривалість високого сигналу на піне Echo
        duration = pulseIn (echoPin, HIGH);
        // Розрахуємо відстань
        distance = duration / 58;
        // Виведемо значення в Serial Moni
        if (distance >125 || distance< 25) {
          noTone (speakerPin);
          break;
        }
        // калькулція довжини кожної ноти
        divider = melody[thisNote + 1];
        if (divider > 0) {
          // звичайна нота
          noteDuration = (wholenote) / divider;
        }
        else if (divider < 0) {
          // подвійна нота, бо використане негативне значення
          noteDuration = (wholenote) / abs(divider);
          // подвоюємо значення
          noteDuration *= 1.5; 
        }
        // програємо ноту 90%, ще 10% є пауза
        tone(speakerPin, melody[thisNote], noteDuration * 0.9);
        // пауза
        delay(noteDuration);
        // зупиняємо звув перед наступною нотою
        noTone(speakerPin);
    }
  }//tone (speakerPin, 300); // включити Пьезозуммер
  else {
    noTone (speakerPin);
  }
  delay (100);
}


  
